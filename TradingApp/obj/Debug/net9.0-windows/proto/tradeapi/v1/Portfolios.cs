// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/tradeapi/v1/portfolios.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Finam.TradeApi.Proto.V1 {

  /// <summary>Holder for reflection information generated from proto/tradeapi/v1/portfolios.proto</summary>
  public static partial class PortfoliosReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/tradeapi/v1/portfolios.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PortfoliosReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJwcm90by90cmFkZWFwaS92MS9wb3J0Zm9saW9zLnByb3RvEhFwcm90by50",
            "cmFkZWFwaS52MRoecHJvdG8vdHJhZGVhcGkvdjEvY29tbW9uLnByb3RvIn4K",
            "EFBvcnRmb2xpb0NvbnRlbnQSGgoSaW5jbHVkZV9jdXJyZW5jaWVzGAEgASgI",
            "EhUKDWluY2x1ZGVfbW9uZXkYAiABKAgSGQoRaW5jbHVkZV9wb3NpdGlvbnMY",
            "AyABKAgSHAoUaW5jbHVkZV9tYXhfYnV5X3NlbGwYBCABKAgi/gIKC1Bvc2l0",
            "aW9uUm93EhUKDXNlY3VyaXR5X2NvZGUYASABKAkSKQoGbWFya2V0GAIgASgO",
            "MhkucHJvdG8udHJhZGVhcGkudjEuTWFya2V0Eg8KB2JhbGFuY2UYAyABKAMS",
            "FQoNY3VycmVudF9wcmljZRgEIAEoARIOCgZlcXVpdHkYBSABKAESFQoNYXZl",
            "cmFnZV9wcmljZRgGIAEoARIQCghjdXJyZW5jeRgHIAEoCRIaChJhY2N1bXVs",
            "YXRlZF9wcm9maXQYCCABKAESFAoMdG9kYXlfcHJvZml0GAkgASgBEhkKEXVu",
            "cmVhbGl6ZWRfcHJvZml0GAogASgBEg4KBnByb2ZpdBgLIAEoARIPCgdtYXhf",
            "YnV5GAwgASgDEhAKCG1heF9zZWxsGA0gASgDEhYKDnByaWNlX2N1cnJlbmN5",
            "GA4gASgJEh4KFmF2ZXJhZ2VfcHJpY2VfY3VycmVuY3kYDyABKAkSFAoMYXZl",
            "cmFnZV9yYXRlGBAgASgBImsKC0N1cnJlbmN5Um93EgwKBG5hbWUYASABKAkS",
            "DwoHYmFsYW5jZRgCIAEoARISCgpjcm9zc19yYXRlGAMgASgBEg4KBmVxdWl0",
            "eRgEIAEoARIZChF1bnJlYWxpemVkX3Byb2ZpdBgFIAEoASJYCghNb25leVJv",
            "dxIpCgZtYXJrZXQYASABKA4yGS5wcm90by50cmFkZWFwaS52MS5NYXJrZXQS",
            "EAoIY3VycmVuY3kYAiABKAkSDwoHYmFsYW5jZRgDIAEoASJeChNHZXRQb3J0",
            "Zm9saW9SZXF1ZXN0EhEKCWNsaWVudF9pZBgBIAEoCRI0Cgdjb250ZW50GAIg",
            "ASgLMiMucHJvdG8udHJhZGVhcGkudjEuUG9ydGZvbGlvQ29udGVudCKRAgoS",
            "R2V0UG9ydGZvbGlvUmVzdWx0EhEKCWNsaWVudF9pZBgBIAEoCRI0Cgdjb250",
            "ZW50GAIgASgLMiMucHJvdG8udHJhZGVhcGkudjEuUG9ydGZvbGlvQ29udGVu",
            "dBIOCgZlcXVpdHkYAyABKAESDwoHYmFsYW5jZRgEIAEoARIxCglwb3NpdGlv",
            "bnMYBSADKAsyHi5wcm90by50cmFkZWFwaS52MS5Qb3NpdGlvblJvdxIyCgpj",
            "dXJyZW5jaWVzGAYgAygLMh4ucHJvdG8udHJhZGVhcGkudjEuQ3VycmVuY3lS",
            "b3cSKgoFbW9uZXkYByADKAsyGy5wcm90by50cmFkZWFwaS52MS5Nb25leVJv",
            "d0IaqgIXRmluYW0uVHJhZGVBcGkuUHJvdG8uVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Finam.TradeApi.Proto.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.PortfolioContent), global::Finam.TradeApi.Proto.V1.PortfolioContent.Parser, new[]{ "IncludeCurrencies", "IncludeMoney", "IncludePositions", "IncludeMaxBuySell" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.PositionRow), global::Finam.TradeApi.Proto.V1.PositionRow.Parser, new[]{ "SecurityCode", "Market", "Balance", "CurrentPrice", "Equity", "AveragePrice", "Currency", "AccumulatedProfit", "TodayProfit", "UnrealizedProfit", "Profit", "MaxBuy", "MaxSell", "PriceCurrency", "AveragePriceCurrency", "AverageRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.CurrencyRow), global::Finam.TradeApi.Proto.V1.CurrencyRow.Parser, new[]{ "Name", "Balance", "CrossRate", "Equity", "UnrealizedProfit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.MoneyRow), global::Finam.TradeApi.Proto.V1.MoneyRow.Parser, new[]{ "Market", "Currency", "Balance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.GetPortfolioRequest), global::Finam.TradeApi.Proto.V1.GetPortfolioRequest.Parser, new[]{ "ClientId", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Finam.TradeApi.Proto.V1.GetPortfolioResult), global::Finam.TradeApi.Proto.V1.GetPortfolioResult.Parser, new[]{ "ClientId", "Content", "Equity", "Balance", "Positions", "Currencies", "Money" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// What kind of data the response contains.
  /// Какие данные будут в ответе.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PortfolioContent : pb::IMessage<PortfolioContent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PortfolioContent> _parser = new pb::MessageParser<PortfolioContent>(() => new PortfolioContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PortfolioContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioContent(PortfolioContent other) : this() {
      includeCurrencies_ = other.includeCurrencies_;
      includeMoney_ = other.includeMoney_;
      includePositions_ = other.includePositions_;
      includeMaxBuySell_ = other.includeMaxBuySell_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioContent Clone() {
      return new PortfolioContent(this);
    }

    /// <summary>Field number for the "include_currencies" field.</summary>
    public const int IncludeCurrenciesFieldNumber = 1;
    private bool includeCurrencies_;
    /// <summary>
    /// Currency positions.
    /// Валютные позиции.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeCurrencies {
      get { return includeCurrencies_; }
      set {
        includeCurrencies_ = value;
      }
    }

    /// <summary>Field number for the "include_money" field.</summary>
    public const int IncludeMoneyFieldNumber = 2;
    private bool includeMoney_;
    /// <summary>
    /// Money positions.
    /// Денежные позиции.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeMoney {
      get { return includeMoney_; }
      set {
        includeMoney_ = value;
      }
    }

    /// <summary>Field number for the "include_positions" field.</summary>
    public const int IncludePositionsFieldNumber = 3;
    private bool includePositions_;
    /// <summary>
    /// DEPO positions.
    /// Позиции DEPO.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludePositions {
      get { return includePositions_; }
      set {
        includePositions_ = value;
      }
    }

    /// <summary>Field number for the "include_max_buy_sell" field.</summary>
    public const int IncludeMaxBuySellFieldNumber = 4;
    private bool includeMaxBuySell_;
    /// <summary>
    /// Buy and Sell limits.
    /// Лимиты покупки и продажи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeMaxBuySell {
      get { return includeMaxBuySell_; }
      set {
        includeMaxBuySell_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PortfolioContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PortfolioContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncludeCurrencies != other.IncludeCurrencies) return false;
      if (IncludeMoney != other.IncludeMoney) return false;
      if (IncludePositions != other.IncludePositions) return false;
      if (IncludeMaxBuySell != other.IncludeMaxBuySell) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IncludeCurrencies != false) hash ^= IncludeCurrencies.GetHashCode();
      if (IncludeMoney != false) hash ^= IncludeMoney.GetHashCode();
      if (IncludePositions != false) hash ^= IncludePositions.GetHashCode();
      if (IncludeMaxBuySell != false) hash ^= IncludeMaxBuySell.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IncludeCurrencies != false) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeCurrencies);
      }
      if (IncludeMoney != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeMoney);
      }
      if (IncludePositions != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePositions);
      }
      if (IncludeMaxBuySell != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeMaxBuySell);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IncludeCurrencies != false) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeCurrencies);
      }
      if (IncludeMoney != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeMoney);
      }
      if (IncludePositions != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePositions);
      }
      if (IncludeMaxBuySell != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeMaxBuySell);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IncludeCurrencies != false) {
        size += 1 + 1;
      }
      if (IncludeMoney != false) {
        size += 1 + 1;
      }
      if (IncludePositions != false) {
        size += 1 + 1;
      }
      if (IncludeMaxBuySell != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PortfolioContent other) {
      if (other == null) {
        return;
      }
      if (other.IncludeCurrencies != false) {
        IncludeCurrencies = other.IncludeCurrencies;
      }
      if (other.IncludeMoney != false) {
        IncludeMoney = other.IncludeMoney;
      }
      if (other.IncludePositions != false) {
        IncludePositions = other.IncludePositions;
      }
      if (other.IncludeMaxBuySell != false) {
        IncludeMaxBuySell = other.IncludeMaxBuySell;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IncludeCurrencies = input.ReadBool();
            break;
          }
          case 16: {
            IncludeMoney = input.ReadBool();
            break;
          }
          case 24: {
            IncludePositions = input.ReadBool();
            break;
          }
          case 32: {
            IncludeMaxBuySell = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IncludeCurrencies = input.ReadBool();
            break;
          }
          case 16: {
            IncludeMoney = input.ReadBool();
            break;
          }
          case 24: {
            IncludePositions = input.ReadBool();
            break;
          }
          case 32: {
            IncludeMaxBuySell = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DEPO position.
  /// Позиция DEPO.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PositionRow : pb::IMessage<PositionRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionRow> _parser = new pb::MessageParser<PositionRow>(() => new PositionRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionRow(PositionRow other) : this() {
      securityCode_ = other.securityCode_;
      market_ = other.market_;
      balance_ = other.balance_;
      currentPrice_ = other.currentPrice_;
      equity_ = other.equity_;
      averagePrice_ = other.averagePrice_;
      currency_ = other.currency_;
      accumulatedProfit_ = other.accumulatedProfit_;
      todayProfit_ = other.todayProfit_;
      unrealizedProfit_ = other.unrealizedProfit_;
      profit_ = other.profit_;
      maxBuy_ = other.maxBuy_;
      maxSell_ = other.maxSell_;
      priceCurrency_ = other.priceCurrency_;
      averagePriceCurrency_ = other.averagePriceCurrency_;
      averageRate_ = other.averageRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionRow Clone() {
      return new PositionRow(this);
    }

    /// <summary>Field number for the "security_code" field.</summary>
    public const int SecurityCodeFieldNumber = 1;
    private string securityCode_ = "";
    /// <summary>
    /// Security Code.
    /// Тикер инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityCode {
      get { return securityCode_; }
      set {
        securityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market" field.</summary>
    public const int MarketFieldNumber = 2;
    private global::Finam.TradeApi.Proto.V1.Market market_ = global::Finam.TradeApi.Proto.V1.Market.Unspecified;
    /// <summary>
    /// Security market.
    /// Рынок инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Finam.TradeApi.Proto.V1.Market Market {
      get { return market_; }
      set {
        market_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 3;
    private long balance_;
    /// <summary>
    /// Current position, items.
    /// Текущая позиция, шт.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "current_price" field.</summary>
    public const int CurrentPriceFieldNumber = 4;
    private double currentPrice_;
    /// <summary>
    /// Current price in price_currency.
    /// Текущая цена в валюте цены инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentPrice {
      get { return currentPrice_; }
      set {
        currentPrice_ = value;
      }
    }

    /// <summary>Field number for the "equity" field.</summary>
    public const int EquityFieldNumber = 5;
    private double equity_;
    /// <summary>
    /// Positions equity.
    /// Оценка позиции по инструменту в валюте риска.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Equity {
      get { return equity_; }
      set {
        equity_ = value;
      }
    }

    /// <summary>Field number for the "average_price" field.</summary>
    public const int AveragePriceFieldNumber = 6;
    private double averagePrice_;
    /// <summary>
    /// Balanced price of security in price_currency.
    /// Балансовая цена в валюте цены инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AveragePrice {
      get { return averagePrice_; }
      set {
        averagePrice_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 7;
    private string currency_ = "";
    /// <summary>
    /// Risk currency.
    /// Валюта риска.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accumulated_profit" field.</summary>
    public const int AccumulatedProfitFieldNumber = 8;
    private double accumulatedProfit_;
    /// <summary>
    /// P/L for initial position, in risk currency.
    /// Прибыль/убыток по входящей позиции, в валюте риска.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AccumulatedProfit {
      get { return accumulatedProfit_; }
      set {
        accumulatedProfit_ = value;
      }
    }

    /// <summary>Field number for the "today_profit" field.</summary>
    public const int TodayProfitFieldNumber = 9;
    private double todayProfit_;
    /// <summary>
    /// Daily P/L, in risk currency.
    /// Прибыль/убыток по сделкам за день, в валюте риска.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TodayProfit {
      get { return todayProfit_; }
      set {
        todayProfit_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_profit" field.</summary>
    public const int UnrealizedProfitFieldNumber = 10;
    private double unrealizedProfit_;
    /// <summary>
    /// Unrealized P/L, in average_price_currency.
    /// Нереализованные прибыль/убытки по балансовой цене в валюте инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedProfit {
      get { return unrealizedProfit_; }
      set {
        unrealizedProfit_ = value;
      }
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 11;
    private double profit_;
    /// <summary>
    /// P/L in price_currency.
    /// Прибыль/убытки в валюте цены инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Profit {
      get { return profit_; }
      set {
        profit_ = value;
      }
    }

    /// <summary>Field number for the "max_buy" field.</summary>
    public const int MaxBuyFieldNumber = 12;
    private long maxBuy_;
    /// <summary>
    /// Max lots to buy.
    /// Максимальное кол-во лотов, доступных для покупки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuy {
      get { return maxBuy_; }
      set {
        maxBuy_ = value;
      }
    }

    /// <summary>Field number for the "max_sell" field.</summary>
    public const int MaxSellFieldNumber = 13;
    private long maxSell_;
    /// <summary>
    /// Max lots to sell.
    /// Максимальное кол-во лотов, доступных для продажи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxSell {
      get { return maxSell_; }
      set {
        maxSell_ = value;
      }
    }

    /// <summary>Field number for the "price_currency" field.</summary>
    public const int PriceCurrencyFieldNumber = 14;
    private string priceCurrency_ = "";
    /// <summary>
    /// Security price currency.
    /// Валюта цены инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriceCurrency {
      get { return priceCurrency_; }
      set {
        priceCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "average_price_currency" field.</summary>
    public const int AveragePriceCurrencyFieldNumber = 15;
    private string averagePriceCurrency_ = "";
    /// <summary>
    /// Balanced price currency.
    /// Валюта балансовой цены.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AveragePriceCurrency {
      get { return averagePriceCurrency_; }
      set {
        averagePriceCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "average_rate" field.</summary>
    public const int AverageRateFieldNumber = 16;
    private double averageRate_;
    /// <summary>
    /// Risk Currency to Price currency Cross rate.
    /// Кросс-курс валюты балансовой цены к валюте риска.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AverageRate {
      get { return averageRate_; }
      set {
        averageRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SecurityCode != other.SecurityCode) return false;
      if (Market != other.Market) return false;
      if (Balance != other.Balance) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentPrice, other.CurrentPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Equity, other.Equity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AveragePrice, other.AveragePrice)) return false;
      if (Currency != other.Currency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AccumulatedProfit, other.AccumulatedProfit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TodayProfit, other.TodayProfit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedProfit, other.UnrealizedProfit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Profit, other.Profit)) return false;
      if (MaxBuy != other.MaxBuy) return false;
      if (MaxSell != other.MaxSell) return false;
      if (PriceCurrency != other.PriceCurrency) return false;
      if (AveragePriceCurrency != other.AveragePriceCurrency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AverageRate, other.AverageRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SecurityCode.Length != 0) hash ^= SecurityCode.GetHashCode();
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) hash ^= Market.GetHashCode();
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      if (CurrentPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentPrice);
      if (Equity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Equity);
      if (AveragePrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AveragePrice);
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (AccumulatedProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AccumulatedProfit);
      if (TodayProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TodayProfit);
      if (UnrealizedProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedProfit);
      if (Profit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Profit);
      if (MaxBuy != 0L) hash ^= MaxBuy.GetHashCode();
      if (MaxSell != 0L) hash ^= MaxSell.GetHashCode();
      if (PriceCurrency.Length != 0) hash ^= PriceCurrency.GetHashCode();
      if (AveragePriceCurrency.Length != 0) hash ^= AveragePriceCurrency.GetHashCode();
      if (AverageRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AverageRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SecurityCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SecurityCode);
      }
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Market);
      }
      if (Balance != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Balance);
      }
      if (CurrentPrice != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(CurrentPrice);
      }
      if (Equity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Equity);
      }
      if (AveragePrice != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(AveragePrice);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Currency);
      }
      if (AccumulatedProfit != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(AccumulatedProfit);
      }
      if (TodayProfit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TodayProfit);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(UnrealizedProfit);
      }
      if (Profit != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Profit);
      }
      if (MaxBuy != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MaxBuy);
      }
      if (MaxSell != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxSell);
      }
      if (PriceCurrency.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PriceCurrency);
      }
      if (AveragePriceCurrency.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AveragePriceCurrency);
      }
      if (AverageRate != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(AverageRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SecurityCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SecurityCode);
      }
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Market);
      }
      if (Balance != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Balance);
      }
      if (CurrentPrice != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(CurrentPrice);
      }
      if (Equity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Equity);
      }
      if (AveragePrice != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(AveragePrice);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Currency);
      }
      if (AccumulatedProfit != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(AccumulatedProfit);
      }
      if (TodayProfit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TodayProfit);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(UnrealizedProfit);
      }
      if (Profit != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Profit);
      }
      if (MaxBuy != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MaxBuy);
      }
      if (MaxSell != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxSell);
      }
      if (PriceCurrency.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PriceCurrency);
      }
      if (AveragePriceCurrency.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AveragePriceCurrency);
      }
      if (AverageRate != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(AverageRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SecurityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecurityCode);
      }
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Market);
      }
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      if (CurrentPrice != 0D) {
        size += 1 + 8;
      }
      if (Equity != 0D) {
        size += 1 + 8;
      }
      if (AveragePrice != 0D) {
        size += 1 + 8;
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (AccumulatedProfit != 0D) {
        size += 1 + 8;
      }
      if (TodayProfit != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedProfit != 0D) {
        size += 1 + 8;
      }
      if (Profit != 0D) {
        size += 1 + 8;
      }
      if (MaxBuy != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuy);
      }
      if (MaxSell != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSell);
      }
      if (PriceCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceCurrency);
      }
      if (AveragePriceCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AveragePriceCurrency);
      }
      if (AverageRate != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionRow other) {
      if (other == null) {
        return;
      }
      if (other.SecurityCode.Length != 0) {
        SecurityCode = other.SecurityCode;
      }
      if (other.Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        Market = other.Market;
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      if (other.CurrentPrice != 0D) {
        CurrentPrice = other.CurrentPrice;
      }
      if (other.Equity != 0D) {
        Equity = other.Equity;
      }
      if (other.AveragePrice != 0D) {
        AveragePrice = other.AveragePrice;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.AccumulatedProfit != 0D) {
        AccumulatedProfit = other.AccumulatedProfit;
      }
      if (other.TodayProfit != 0D) {
        TodayProfit = other.TodayProfit;
      }
      if (other.UnrealizedProfit != 0D) {
        UnrealizedProfit = other.UnrealizedProfit;
      }
      if (other.Profit != 0D) {
        Profit = other.Profit;
      }
      if (other.MaxBuy != 0L) {
        MaxBuy = other.MaxBuy;
      }
      if (other.MaxSell != 0L) {
        MaxSell = other.MaxSell;
      }
      if (other.PriceCurrency.Length != 0) {
        PriceCurrency = other.PriceCurrency;
      }
      if (other.AveragePriceCurrency.Length != 0) {
        AveragePriceCurrency = other.AveragePriceCurrency;
      }
      if (other.AverageRate != 0D) {
        AverageRate = other.AverageRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SecurityCode = input.ReadString();
            break;
          }
          case 16: {
            Market = (global::Finam.TradeApi.Proto.V1.Market) input.ReadEnum();
            break;
          }
          case 24: {
            Balance = input.ReadInt64();
            break;
          }
          case 33: {
            CurrentPrice = input.ReadDouble();
            break;
          }
          case 41: {
            Equity = input.ReadDouble();
            break;
          }
          case 49: {
            AveragePrice = input.ReadDouble();
            break;
          }
          case 58: {
            Currency = input.ReadString();
            break;
          }
          case 65: {
            AccumulatedProfit = input.ReadDouble();
            break;
          }
          case 73: {
            TodayProfit = input.ReadDouble();
            break;
          }
          case 81: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
          case 89: {
            Profit = input.ReadDouble();
            break;
          }
          case 96: {
            MaxBuy = input.ReadInt64();
            break;
          }
          case 104: {
            MaxSell = input.ReadInt64();
            break;
          }
          case 114: {
            PriceCurrency = input.ReadString();
            break;
          }
          case 122: {
            AveragePriceCurrency = input.ReadString();
            break;
          }
          case 129: {
            AverageRate = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SecurityCode = input.ReadString();
            break;
          }
          case 16: {
            Market = (global::Finam.TradeApi.Proto.V1.Market) input.ReadEnum();
            break;
          }
          case 24: {
            Balance = input.ReadInt64();
            break;
          }
          case 33: {
            CurrentPrice = input.ReadDouble();
            break;
          }
          case 41: {
            Equity = input.ReadDouble();
            break;
          }
          case 49: {
            AveragePrice = input.ReadDouble();
            break;
          }
          case 58: {
            Currency = input.ReadString();
            break;
          }
          case 65: {
            AccumulatedProfit = input.ReadDouble();
            break;
          }
          case 73: {
            TodayProfit = input.ReadDouble();
            break;
          }
          case 81: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
          case 89: {
            Profit = input.ReadDouble();
            break;
          }
          case 96: {
            MaxBuy = input.ReadInt64();
            break;
          }
          case 104: {
            MaxSell = input.ReadInt64();
            break;
          }
          case 114: {
            PriceCurrency = input.ReadString();
            break;
          }
          case 122: {
            AveragePriceCurrency = input.ReadString();
            break;
          }
          case 129: {
            AverageRate = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Currency position.
  /// Валютная позиция.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CurrencyRow : pb::IMessage<CurrencyRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyRow> _parser = new pb::MessageParser<CurrencyRow>(() => new CurrencyRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRow(CurrencyRow other) : this() {
      name_ = other.name_;
      balance_ = other.balance_;
      crossRate_ = other.crossRate_;
      equity_ = other.equity_;
      unrealizedProfit_ = other.unrealizedProfit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRow Clone() {
      return new CurrencyRow(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Currency code.
    /// Код валюты.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private double balance_;
    /// <summary>
    /// Current position.
    /// Текущая позиция.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "cross_rate" field.</summary>
    public const int CrossRateFieldNumber = 3;
    private double crossRate_;
    /// <summary>
    /// Currency rate for RUB.
    /// Курс валюты к рублю.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CrossRate {
      get { return crossRate_; }
      set {
        crossRate_ = value;
      }
    }

    /// <summary>Field number for the "equity" field.</summary>
    public const int EquityFieldNumber = 4;
    private double equity_;
    /// <summary>
    /// Equity in RUB.
    /// Оценка в рублях.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Equity {
      get { return equity_; }
      set {
        equity_ = value;
      }
    }

    /// <summary>Field number for the "unrealized_profit" field.</summary>
    public const int UnrealizedProfitFieldNumber = 5;
    private double unrealizedProfit_;
    /// <summary>
    /// Unrealized P/L, in RUB.
    /// Нереализованные прибыль/убытки в рублях.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedProfit {
      get { return unrealizedProfit_; }
      set {
        unrealizedProfit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Balance, other.Balance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CrossRate, other.CrossRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Equity, other.Equity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedProfit, other.UnrealizedProfit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Balance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Balance);
      if (CrossRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CrossRate);
      if (Equity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Equity);
      if (UnrealizedProfit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedProfit);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Balance != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Balance);
      }
      if (CrossRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(CrossRate);
      }
      if (Equity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Equity);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(UnrealizedProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Balance != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Balance);
      }
      if (CrossRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(CrossRate);
      }
      if (Equity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Equity);
      }
      if (UnrealizedProfit != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(UnrealizedProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Balance != 0D) {
        size += 1 + 8;
      }
      if (CrossRate != 0D) {
        size += 1 + 8;
      }
      if (Equity != 0D) {
        size += 1 + 8;
      }
      if (UnrealizedProfit != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyRow other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Balance != 0D) {
        Balance = other.Balance;
      }
      if (other.CrossRate != 0D) {
        CrossRate = other.CrossRate;
      }
      if (other.Equity != 0D) {
        Equity = other.Equity;
      }
      if (other.UnrealizedProfit != 0D) {
        UnrealizedProfit = other.UnrealizedProfit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Balance = input.ReadDouble();
            break;
          }
          case 25: {
            CrossRate = input.ReadDouble();
            break;
          }
          case 33: {
            Equity = input.ReadDouble();
            break;
          }
          case 41: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Balance = input.ReadDouble();
            break;
          }
          case 25: {
            CrossRate = input.ReadDouble();
            break;
          }
          case 33: {
            Equity = input.ReadDouble();
            break;
          }
          case 41: {
            UnrealizedProfit = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Money position.
  /// Денежная позиция.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MoneyRow : pb::IMessage<MoneyRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoneyRow> _parser = new pb::MessageParser<MoneyRow>(() => new MoneyRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MoneyRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoneyRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoneyRow(MoneyRow other) : this() {
      market_ = other.market_;
      currency_ = other.currency_;
      balance_ = other.balance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoneyRow Clone() {
      return new MoneyRow(this);
    }

    /// <summary>Field number for the "market" field.</summary>
    public const int MarketFieldNumber = 1;
    private global::Finam.TradeApi.Proto.V1.Market market_ = global::Finam.TradeApi.Proto.V1.Market.Unspecified;
    /// <summary>
    /// Position market.
    /// Рынок позиции.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Finam.TradeApi.Proto.V1.Market Market {
      get { return market_; }
      set {
        market_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private string currency_ = "";
    /// <summary>
    /// Currency code.
    /// Код валюты.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 3;
    private double balance_;
    /// <summary>
    /// Current position.
    /// Текущая позиция.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MoneyRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MoneyRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Market != other.Market) return false;
      if (Currency != other.Currency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Balance, other.Balance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) hash ^= Market.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (Balance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Balance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Market);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Currency);
      }
      if (Balance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Market);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Currency);
      }
      if (Balance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Market);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (Balance != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MoneyRow other) {
      if (other == null) {
        return;
      }
      if (other.Market != global::Finam.TradeApi.Proto.V1.Market.Unspecified) {
        Market = other.Market;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.Balance != 0D) {
        Balance = other.Balance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Market = (global::Finam.TradeApi.Proto.V1.Market) input.ReadEnum();
            break;
          }
          case 18: {
            Currency = input.ReadString();
            break;
          }
          case 25: {
            Balance = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Market = (global::Finam.TradeApi.Proto.V1.Market) input.ReadEnum();
            break;
          }
          case 18: {
            Currency = input.ReadString();
            break;
          }
          case 25: {
            Balance = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get Portfolio Request.
  /// Запрос портфеля.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetPortfolioRequest : pb::IMessage<GetPortfolioRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPortfolioRequest> _parser = new pb::MessageParser<GetPortfolioRequest>(() => new GetPortfolioRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetPortfolioRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioRequest(GetPortfolioRequest other) : this() {
      clientId_ = other.clientId_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioRequest Clone() {
      return new GetPortfolioRequest(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    /// <summary>
    /// Trade Account ID.
    /// Идентификатор торгового счёта.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private global::Finam.TradeApi.Proto.V1.PortfolioContent content_;
    /// <summary>
    /// What data to return by request.
    /// Какие данные возвращать в ответе.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Finam.TradeApi.Proto.V1.PortfolioContent Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetPortfolioRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetPortfolioRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(Content, other.Content)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetPortfolioRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
        }
        Content.MergeFrom(other.Content);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GetPortfolioRequest result.
  /// Результат GetPortfolioRequest.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetPortfolioResult : pb::IMessage<GetPortfolioResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPortfolioResult> _parser = new pb::MessageParser<GetPortfolioResult>(() => new GetPortfolioResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetPortfolioResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Finam.TradeApi.Proto.V1.PortfoliosReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioResult(GetPortfolioResult other) : this() {
      clientId_ = other.clientId_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      equity_ = other.equity_;
      balance_ = other.balance_;
      positions_ = other.positions_.Clone();
      currencies_ = other.currencies_.Clone();
      money_ = other.money_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPortfolioResult Clone() {
      return new GetPortfolioResult(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    /// <summary>
    /// Trade Account ID.
    /// Идентификатор торгового счёта.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private global::Finam.TradeApi.Proto.V1.PortfolioContent content_;
    /// <summary>
    /// What kind of data the response contains.
    /// Какие данные будут в ответе.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Finam.TradeApi.Proto.V1.PortfolioContent Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "equity" field.</summary>
    public const int EquityFieldNumber = 3;
    private double equity_;
    /// <summary>
    /// Current equity, RUB.
    /// Текущая оценка портфеля в рублях.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Equity {
      get { return equity_; }
      set {
        equity_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 4;
    private double balance_;
    /// <summary>
    /// Open Equity, RUB.
    /// Входящая оценка портфеля в рублях.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Finam.TradeApi.Proto.V1.PositionRow> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(42, global::Finam.TradeApi.Proto.V1.PositionRow.Parser);
    private readonly pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.PositionRow> positions_ = new pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.PositionRow>();
    /// <summary>
    /// DEPO positions.
    /// Позиции DEPO.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.PositionRow> Positions {
      get { return positions_; }
    }

    /// <summary>Field number for the "currencies" field.</summary>
    public const int CurrenciesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Finam.TradeApi.Proto.V1.CurrencyRow> _repeated_currencies_codec
        = pb::FieldCodec.ForMessage(50, global::Finam.TradeApi.Proto.V1.CurrencyRow.Parser);
    private readonly pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.CurrencyRow> currencies_ = new pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.CurrencyRow>();
    /// <summary>
    /// Currency positions.
    /// Валютные позиции.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.CurrencyRow> Currencies {
      get { return currencies_; }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Finam.TradeApi.Proto.V1.MoneyRow> _repeated_money_codec
        = pb::FieldCodec.ForMessage(58, global::Finam.TradeApi.Proto.V1.MoneyRow.Parser);
    private readonly pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.MoneyRow> money_ = new pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.MoneyRow>();
    /// <summary>
    /// Money positions.
    /// Денежные позиции.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Finam.TradeApi.Proto.V1.MoneyRow> Money {
      get { return money_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetPortfolioResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetPortfolioResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(Content, other.Content)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Equity, other.Equity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Balance, other.Balance)) return false;
      if(!positions_.Equals(other.positions_)) return false;
      if(!currencies_.Equals(other.currencies_)) return false;
      if(!money_.Equals(other.money_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (Equity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Equity);
      if (Balance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Balance);
      hash ^= positions_.GetHashCode();
      hash ^= currencies_.GetHashCode();
      hash ^= money_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (Equity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Equity);
      }
      if (Balance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Balance);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      currencies_.WriteTo(output, _repeated_currencies_codec);
      money_.WriteTo(output, _repeated_money_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (Equity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Equity);
      }
      if (Balance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Balance);
      }
      positions_.WriteTo(ref output, _repeated_positions_codec);
      currencies_.WriteTo(ref output, _repeated_currencies_codec);
      money_.WriteTo(ref output, _repeated_money_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (Equity != 0D) {
        size += 1 + 8;
      }
      if (Balance != 0D) {
        size += 1 + 8;
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      size += currencies_.CalculateSize(_repeated_currencies_codec);
      size += money_.CalculateSize(_repeated_money_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetPortfolioResult other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
        }
        Content.MergeFrom(other.Content);
      }
      if (other.Equity != 0D) {
        Equity = other.Equity;
      }
      if (other.Balance != 0D) {
        Balance = other.Balance;
      }
      positions_.Add(other.positions_);
      currencies_.Add(other.currencies_);
      money_.Add(other.money_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
            }
            input.ReadMessage(Content);
            break;
          }
          case 25: {
            Equity = input.ReadDouble();
            break;
          }
          case 33: {
            Balance = input.ReadDouble();
            break;
          }
          case 42: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 50: {
            currencies_.AddEntriesFrom(input, _repeated_currencies_codec);
            break;
          }
          case 58: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::Finam.TradeApi.Proto.V1.PortfolioContent();
            }
            input.ReadMessage(Content);
            break;
          }
          case 25: {
            Equity = input.ReadDouble();
            break;
          }
          case 33: {
            Balance = input.ReadDouble();
            break;
          }
          case 42: {
            positions_.AddEntriesFrom(ref input, _repeated_positions_codec);
            break;
          }
          case 50: {
            currencies_.AddEntriesFrom(ref input, _repeated_currencies_codec);
            break;
          }
          case 58: {
            money_.AddEntriesFrom(ref input, _repeated_money_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
